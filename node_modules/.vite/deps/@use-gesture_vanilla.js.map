{
  "version": 3,
  "sources": ["../../@use-gesture/vanilla/dist/use-gesture-vanilla.esm.js"],
  "sourcesContent": ["import { registerAction, dragAction, pinchAction, wheelAction, scrollAction, moveAction, hoverAction } from '@use-gesture/core/actions';\nexport * from '@use-gesture/core/actions';\nimport { Controller, parseMergedHandlers } from '@use-gesture/core';\nexport * from '@use-gesture/core/utils';\nexport * from '@use-gesture/core/types';\n\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n\nclass Recognizer {\n  constructor(target, handlers, config, gestureKey, nativeHandlers) {\n    this._target = target;\n    this._gestureKey = gestureKey;\n    this._ctrl = new Controller(handlers);\n    this._ctrl.applyHandlers(handlers, nativeHandlers);\n    this._ctrl.applyConfig(_objectSpread2(_objectSpread2({}, config), {}, {\n      target\n    }), gestureKey);\n    this._ctrl.effect();\n  }\n  destroy() {\n    this._ctrl.clean();\n  }\n  setConfig(config) {\n    this._ctrl.clean();\n    this._ctrl.applyConfig(_objectSpread2(_objectSpread2({}, config), {}, {\n      target: this._target\n    }), this._gestureKey);\n    this._ctrl.effect();\n  }\n}\n\nconst DragGesture = function DragGesture(target, handler, config) {\n  registerAction(dragAction);\n  return new Recognizer(target, {\n    drag: handler\n  }, config || {}, 'drag');\n};\n\nconst PinchGesture = function PinchGesture(target, handler, config) {\n  registerAction(pinchAction);\n  return new Recognizer(target, {\n    pinch: handler\n  }, config || {}, 'pinch');\n};\n\nconst WheelGesture = function WheelGesture(target, handler, config) {\n  registerAction(wheelAction);\n  return new Recognizer(target, {\n    wheel: handler\n  }, config || {}, 'wheel');\n};\n\nconst ScrollGesture = function ScrollGesture(target, handler, config) {\n  registerAction(scrollAction);\n  return new Recognizer(target, {\n    scroll: handler\n  }, config || {}, 'scroll');\n};\n\nconst MoveGesture = function MoveGesture(target, handler, config) {\n  registerAction(moveAction);\n  return new Recognizer(target, {\n    move: handler\n  }, config || {}, 'move');\n};\n\nconst HoverGesture = function HoverGesture(target, handler, config) {\n  registerAction(hoverAction);\n  return new Recognizer(target, {\n    hover: handler\n  }, config || {}, 'hover');\n};\n\nfunction createGesture(actions) {\n  actions.forEach(registerAction);\n  return function (target, _handlers, _config) {\n    const {\n      handlers,\n      nativeHandlers,\n      config\n    } = parseMergedHandlers(_handlers, _config || {});\n    return new Recognizer(target, handlers, config, undefined, nativeHandlers);\n  };\n}\n\nconst Gesture = function Gesture(target, handlers, config) {\n  const gestureFunction = createGesture([dragAction, pinchAction, scrollAction, wheelAction, moveAction, hoverAction]);\n  return gestureFunction(target, handlers, config || {});\n};\n\nexport { DragGesture, Gesture, HoverGesture, MoveGesture, PinchGesture, ScrollGesture, WheelGesture, createGesture };\n"],
  "mappings": "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",
  "names": ["r", "DragGesture", "PinchGesture", "WheelGesture", "ScrollGesture", "MoveGesture", "HoverGesture", "Gesture"]
}
